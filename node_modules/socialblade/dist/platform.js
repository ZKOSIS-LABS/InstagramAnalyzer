"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlatformWithTop = exports.Platform = void 0;
class Platform {
    constructor(api, platform) {
        this.api = api;
        this.platform = platform;
    }
    /**
     * Returns data about a given user
     *
     * Remember that extended and archive history cost more credits.
     * Find out more at https://socialblade.com/b/docs/user
     */
    user(query, history = 'default') {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.platform === 'youtube' && history === 'vault')
                throw new Error('YouTube does not support vault history. YouTube requires data to be limited to 3 years.');
            const req = yield this.api.get(`${this.platform}/statistics`, {
                query,
                history,
            });
            if (!req.status.success)
                throw req.status.error;
            return req.data;
        });
    }
}
exports.Platform = Platform;
// Not all platform support top lists at this current time.
// We seperate the Platform and extend with Top that way we can
// use the same base class for all platforms.
class PlatformWithTop extends Platform {
    constructor(api, platform, defaultFilter) {
        super(api, platform);
        this.defaultFilter = defaultFilter;
    }
    /**
     * Returns top list for a given filter
     * Starting from page 1, each response has 100 users which can then be accessed for 24 hours.
     * You can then iterate through the pages you wish to get more results
     *
     * Credit break down can be found at https://socialblade.com/b/docs/top-general
     */
    top(query = this.defaultFilter, page = 0) {
        return __awaiter(this, void 0, void 0, function* () {
            const req = yield this.api.get(`${this.platform}/top`, {
                query,
                page,
            });
            if (!req.status.success)
                throw req.status.error;
            return req.data;
        });
    }
}
exports.PlatformWithTop = PlatformWithTop;
//# sourceMappingURL=platform.js.map