import { Matrix } from './matrix';
export declare class Platform<U> {
    protected api: Matrix;
    protected platform: string;
    constructor(api: Matrix, platform: string);
    /**
     * Returns data about a given user
     *
     * Remember that extended and archive history cost more credits.
     * Find out more at https://socialblade.com/b/docs/user
     */
    user(query: string, history?: 'default' | 'extended' | 'archive' | 'vault'): Promise<U>;
}
export declare class PlatformWithTop<U, F, T> extends Platform<U> {
    protected defaultFilter: T;
    constructor(api: Matrix, platform: string, defaultFilter: T);
    /**
     * Returns top list for a given filter
     * Starting from page 1, each response has 100 users which can then be accessed for 24 hours.
     * You can then iterate through the pages you wish to get more results
     *
     * Credit break down can be found at https://socialblade.com/b/docs/top-general
     */
    top(query?: T, page?: number): Promise<F[]>;
}
